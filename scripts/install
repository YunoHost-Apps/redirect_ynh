#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

# Retrieve arguments
app=$YNH_APP_INSTANCE_NAME
domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
block_ip=$YNH_APP_ARG_BLOCK_IP
what_ip=$YNH_APP_ARG_WHAT_IP
redirect_type=$YNH_APP_ARG_REDIRECT_TYPE
redirect_path=$YNH_APP_ARG_REDIRECT_PATH

# Check domain/path availability
ynh_webpath_register "$app" "$domain" "$path_url"

# Validate redirect path
url_regex='(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'
[[ ! $redirect_path =~ $url_regex ]] && ynh_die "Invalid destination: $redirect_path" 1

#Â Save extra settings
ynh_app_setting_set "$app" redirect_type "$redirect_type"
ynh_app_setting_set "$app" redirect_path "$redirect_path"

#=================================================
# BLOCK IP
#=================================================

if [ "$block_ip" -eq 1 ]; then
ynh_replace_string "__IP__" "$what_ip" "../conf/ip.conf"
ynh_replace_string "__ADD_BLOCK_IP__" "include conf.d/block_ip/ip_$app.conf;" "../conf/nginx-proxy.conf"
ynh_replace_string "__ADD_BLOCK_IP__" "include conf.d/block_ip/ip_$app.conf;" "../conf/nginx-proxy-direct.conf"
mkdir -p /etc/nginx/conf.d/block_ip
cp ../conf/ip.conf /etc/nginx/conf.d/block_ip/ip_"$app".conf
fi

if [ "$block_ip" -eq 0 ]; then
ynh_replace_string "__ADD_BLOCK_IP__" "allow all;" "../conf/nginx-proxy.conf"
ynh_replace_string "__ADD_BLOCK_IP__" "allow all;" "../conf/nginx-proxy-direct.conf"
fi

#=================================================
# CONFIGURE NGINX
#=================================================

# Nginx configuration
for FILE in $(ls ../conf/nginx-*.conf)
do
    ynh_replace_string "YNH_LOCATION" "$path_url" "$FILE"
done
if [ "$redirect_type" = "public_302" ];
then
    ynh_replace_string "YNH_REDIRECT_PATH" "$redirect_path" ../conf/nginx-visible-302.conf
    cp ../conf/nginx-visible-302.conf /etc/nginx/conf.d/"$domain".d/"$app".conf
elif [ "$redirect_type" = "public_301" ];
then
    ynh_replace_string "YNH_REDIRECT_PATH" "$redirect_path" ../conf/nginx-visible-301.conf
    cp ../conf/nginx-visible-301.conf /etc/nginx/conf.d/"$domain".d/"$app".conf
elif [ "$redirect_type" = "public_direct" ];
then
    ynh_replace_string "YNH_REDIRECT_PATH" "$redirect_path" ../conf/nginx-proxy-direct.conf
    cp ../conf/nginx-proxy-direct.conf /etc/nginx/conf.d/"$domain".d/"$app".conf
elif [ "$redirect_type" = "public_proxy" ] || [ "$redirect_type" = "private_proxy" ];
then
    ynh_replace_string "YNH_REDIRECT_PATH" "$redirect_path" ../conf/nginx-proxy.conf
    cp ../conf/nginx-proxy.conf /etc/nginx/conf.d/"$domain".d/"$app".conf
fi

#=================================================
# CONFIGURE SSOWAT
#=================================================

# Make app public if necessary
if [ "$redirect_type" != "private_proxy" ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set "$app" unprotected_uris "/"
fi

# Reload Nginx and regenerate SSOwat conf
systemctl reload nginx
